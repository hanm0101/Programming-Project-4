#BlueJ class context
comment0.target=MapWindow
comment0.text=\r\n\ The\ is\ the\ GUI\ for\ the\ Map\ window.\ It\ displays\ the\r\n\ map\ of\ the\ boroughs\ and\ visually\ displays\ the\ number\ of\r\n\ properties\ each\ borough\ has\ that\ meets\ the\ requirements\ of\ the\r\n\ price\ and\ date\ range.\r\n\r\n\ @author\ Faith\ Ong,\ Hana\ Mizukami,\ Sadiyah\ Khanam,\ Zeineb\ Bouchamaoui\r\n\ @version\ 04-03-2019\r\n
comment1.params=input
comment1.target=MapWindow(Input)
comment10.params=TOPpane
comment10.target=void\ timeUI(javafx.scene.layout.GridPane)
comment10.text=\r\n\ Display\ the\ date\ picker\ for\ the\ check\ in\ and\ check\r\n\ out\ dates.\ Calculate\ the\ total\ number\ of\ days\ the\ customer\r\n\ is\ staying.\r\n\ Code\ help\ from\:\ https\://docs.oracle.com/javase/8/javafx/user-interface-tutorial/date-picker.htm\r\n\ @param\ \ TOPpnae\ add\ the\ date\ pickers\ to\ the\ GUI\r\n
comment11.params=datePicker
comment11.target=javafx.scene.control.DateCell\ call(javafx.scene.control.DatePicker)
comment12.params=item\ empty
comment12.target=void\ updateItem(java.time.LocalDate,\ boolean)
comment13.params=middlePane
comment13.target=void\ displayButtons(javafx.scene.layout.Pane)
comment13.text=\r\n\ Create\ a\ button\ for\ each\ borough\ and\ and\ display\ it.\ The\ map\r\n\ of\ buttons\ will\ fade\ into\ the\ screen\r\n\r\n\ @param\ \ middlePane\ the\ pane\ the\ buttons\ are\ added\ to\ to\ be\ displayed\r\n
comment14.params=event
comment14.target=void\ handle(javafx.event.ActionEvent)
comment15.params=btnName\ btn
comment15.target=void\ btnIDs(java.lang.String,\ javafx.scene.control.Button)
comment15.text=\r\n\ Give\ each\ borough\ an\ ID\ corresponding\ to\ the\ number\r\n\ of\ properties\ it\ has\ available.\ This\ is\ used\ to\ change\ its\r\n\ tile's\ colour.\r\n\ @param\ btnName\ the\ name\ of\ the\ buttom\r\n\ @param\ btn\ the\ button\ itself\r\n
comment16.params=btn\ i
comment16.target=void\ btnStructure(javafx.scene.control.Button,\ int)
comment16.text=\r\n\ This\ method\ sets\ up\ the\ geographically\ correct\r\n\ representaion\ of\ the\ map\ by\ giving\ each\ borough\r\n\ specific\ X\ and\ Y\ coordinates.\r\n\ @param\ \ btn\ the\ button\ that\ will\ have\ its\ xna\ dy\ values\ changed\r\n\ @param\ i\ the\ index\ of\ the\ button\ to\ maintain\ order\r\n
comment2.params=
comment2.target=javafx.scene.Scene\ getScene()
comment2.text=\r\n\ Return\ the\ map\ scene.\r\n
comment3.params=
comment3.target=void\ initial()
comment3.text=\r\n\ Initialises\ the\ scene;\r\n
comment4.params=pane
comment4.target=void\ createTopPane(javafx.scene.layout.GridPane)
comment4.text=\r\n\ Create\ the\ top\ pane\ and\ add\ all\ its\ component\r\n\ @param\ \ pane\ the\ root\ pane\ to\ add\ the\ top\ pane\ to\r\n
comment5.params=ov\ value\ new_value
comment5.target=void\ changed(javafx.beans.value.ObservableValue,\ java.lang.Number,\ java.lang.Number)
comment6.params=ov\ value\ new_value
comment6.target=void\ changed(javafx.beans.value.ObservableValue,\ java.lang.Number,\ java.lang.Number)
comment7.params=pane
comment7.target=void\ createMiddlePane(javafx.scene.layout.GridPane)
comment7.text=\ \r\n\ Create\ the\ middle\ pane\ and\ add\ all\ its\ components\r\n\ @param\ \ pane\ the\ root\ pane\ to\ add\ the\ middle\ pane\ to\r\n
comment8.params=pane
comment8.target=void\ createBottomPane(javafx.scene.layout.GridPane)
comment8.text=\ Create\ the\ bottom\ pane\ and\ add\ all\ its\ components\r\n\r\n\ @param\ \ pane\ the\ root\ pane\ to\ add\ the\ top\ pane\ to\r\n
comment9.params=pane
comment9.target=void\ createKeyPane(javafx.scene.layout.GridPane)
comment9.text=\ Create\ the\ third\ pane\ which\ holds\ the\ map\ key\ and\ add\ all\ its\ components\r\n\r\n\ @param\ \ pane\ the\ root\ pane\ to\ add\ the\ top\ pane\ to\r\n
numComments=17
