#BlueJ class context
comment0.target=Stats
comment0.text=\r\n\ Stats\ stores\ the\ backend\ information\ and\ calculations\ on\ statistics\ for\ Stat\ Window.\r\n\r\n\ @author\ Faith\ Ong,\ Hana\ Mizukami,\ Sadiyah\ Khanam,\ Zeineb\ Bouchamaoui\r\n\ @version\ 29-03-2019\r\n
comment1.params=statData
comment1.target=Stats(StatData)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Stats\r\n
comment10.params=
comment10.target=void\ addFirstFour()
comment10.text=\r\n\ Initialize\ shownStats\ array\ list\r\n
comment11.params=
comment11.target=void\ disjoinAL()
comment11.text=\r\n\ Join\ two\ array\ lists\ allStats\ and\ shownStats\ by\ subtracting\ values\ shownStats\ from\ allStats\r\n\ Add\ values\ to\ availableStats\ which\ stores\ the\ stats\ that\ aren't\ shown\r\n
comment12.params=first
comment12.target=java.lang.String\ getAvailable(int)
comment12.text=\r\n\ Return\ a\ value\ from\ availableStats\r\n\ @return\ a\ value\ from\ availableStats\r\n\ @param\ first\ index\ of\ availableStats\r\n
comment13.params=shown
comment13.target=void\ removeAvailable(java.lang.String)
comment13.text=\r\n\ Remove\ a\ string\ from\ the\ array\ list\ availableStats\r\n\ @param\ shown\ String\ of\ stat\ title\r\n
comment14.params=hideValue
comment14.target=void\ addAvailable(java.lang.String)
comment14.text=\r\n\ Add\ a\ string\ value\ to\ availableStats\r\n\ @param\ hideValue\ removed\ value\ of\ stats\ to\ add\ to\ available\ list\r\n
comment15.params=hideValue
comment15.target=void\ addToFirstPositionAvailable(java.lang.String)
comment15.text=\r\n\ Add\ a\ string\ value\ to\ the\ front\ of\ the\ availableStat\ array\ list\r\n\ @param\ hideValue\ string\ of\ the\ shown\ value\r\n
comment16.params=from\ to
comment16.target=void\ averageReviews(int,\ int)
comment16.text=\r\n\ Calculates\ the\ average\ number\ of\ reviews\ per\ properties.\r\n\ @param\ from\ minimum\ price\ user\ input\r\n\ @param\ to\ maximum\ price\ user\ input\r\n
comment17.params=from\ to
comment17.target=void\ availableProperties(int,\ int)
comment17.text=\r\n\ Calculates\ the\ number\ of\ available\ properties.\r\n\ @param\ from\ minimum\ price\ user\ input\r\n\ @param\ to\ maximum\ price\ user\ input\r\n
comment18.params=from\ to
comment18.target=void\ homesAndAppartments(int,\ int)
comment18.text=\r\n\ Calculates\ the\ number\ of\ home\ and\ apartments.\r\n\ @param\ from\ minimum\ price\ user\ input\r\n\ @param\ to\ maximum\ price\ user\ input\r\n
comment19.params=from\ to
comment19.target=void\ mostExpensiveBorough(int,\ int)
comment19.text=\r\n\ Find\ the\ most\ expensive\ borough.\r\n\ @param\ from\ minimum\ price\ user\ input\r\n\ @param\ to\ maximum\ price\ user\ input\r\n
comment2.params=
comment2.target=java.util.HashMap\ getStats()
comment2.text=\r\n\ Return\ hashmap\ stats\ which\ contains\ the\ added\ values\r\n\ @return\ hashmap\ of\ the\ statictics\ with\ titles\ and\ values.\r\n
comment20.params=from\ to
comment20.target=void\ findDistance(int,\ int)
comment20.text=\r\n\ Find\ the\ shortest\ distance\ to\ a\ property\ from\ Bush\ House\r\n\ @param\ from\ minimum\ price\ user\ input\r\n\ @param\ to\ maximum\ price\ user\ input\r\n
comment21.params=from\ to
comment21.target=void\ mostFavouritedProperty(int,\ int)
comment21.text=\r\n\ Stores\ the\ most\ favourited\ property\ in\ stats\ hashmap\r\n\ @param\ from\ minimum\ price\ user\ input\r\n\ @param\ to\ maximum\ price\ user\ input\r\n
comment22.params=from\ to
comment22.target=void\ bestBorough(int,\ int)
comment22.text=\r\n\ Stores\ the\ most\ favourited\ borough\ in\ stats\ hashmap\r\n\ @param\ from\ minimum\ price\ user\ input\r\n\ @param\ to\ maximum\ price\ user\ input\r\n
comment23.params=from\ to
comment23.target=void\ worstBorough(int,\ int)
comment23.text=\r\n\ Stores\ the\ least\ favourited\ borough\ in\ stats\ hashmap\r\n\ @param\ from\ minimum\ price\ user\ input\r\n\ @param\ to\ maximum\ price\ user\ input\r\n
comment3.params=
comment3.target=java.lang.String\ getStatsEntry()
comment3.text=\r\n\ Returns\ every\ statistic\ with\ a\ title\ and\ value\ concatenated\r\n\ @return\ concatenated\ statistics\ with\ titles\ and\ values\r\n
comment4.params=
comment4.target=java.util.ArrayList\ getAvailable()
comment4.text=\r\n\ Returns\ array\ list\ availableStats\ which\ has\ stats\ not\ shown\r\n\ @return\ array\ list\ availableStats\r\n
comment5.params=
comment5.target=void\ addStat()
comment5.text=\r\n\ Add\ values\ to\ stat\ array\ list\ for\ all\ the\ titles\ of\ stats\r\n\ Used\ for\ access\ on\ hashmap\ stats\r\n
comment6.params=index
comment6.target=java.lang.String\ statName(int)
comment6.text=\r\n\ Return\ a\ string\ for\ the\ title\ of\ the\ stats\ from\ stat\ array\r\n\ @return\ statistic\ title\r\n\ @param\ index\ index\ of\ the\ array\ list\ stat\r\n
comment7.params=indexNumber
comment7.target=java.lang.String\ returnStatName(int)
comment7.text=\r\n\ Return\ a\ string\ for\ the\ value\ of\ the\ stats\ from\ the\ hashmap\ stats\r\n\ @return\ stat\ value\ from\ the\ hashmap\ stats\r\n\ @param\ indexNumber\ index\ of\ the\ array\ list\ stat\r\n
comment8.params=ind
comment8.target=java.lang.String\ returnStatLabel(int)
comment8.text=\r\n\ Return\ both\ the\ title\ and\ the\ statistic\r\n\ @return\ concatenated\ title\ and\ value\r\n\ @param\ ind\ index\ of\ the\ array\ list\ stat\r\n
comment9.params=
comment9.target=void\ addValuesArray()
comment9.text=\r\n\ Add\ statistics\ to\ allStats\ array\ list\ to\ store\ all\ stats\r\n
numComments=24
